name: EcmaScript build
description: Continuous integration workflow for building EcmaScript based projects

inputs:
  always-auth:
    default: 'true'
    description: See "always-auth" input documentation at https://github.com/actions/setup-node#readme
    required: false

  architecture:
    description: See "architecture" input documentation at https://github.com/actions/setup-node#readme
    required: false

  cache:
    default: npm
    description: See "cache" input documentation at https://github.com/actions/setup-node#readme
    required: false

  cache-dependency-path:
    default: package-lock.json
    description: See "cache-dependency-path" input documentation at https://github.com/actions/setup-node#readme
    required: false

  check-latest:
    default: 'true'
    description: See "check-latest" input documentation at https://github.com/actions/setup-node#readme
    required: false

  registry-url:
    default: https://npm.pkg.github.com/
    description: See "registry-url" input documentation at https://github.com/actions/setup-node#readme
    required: false

  scope:
    description: See "scope" input documentation at https://github.com/actions/setup-node#readme
    required: false

  node-version:
    description: See "node-version" input documentation at https://github.com/actions/setup-node#readme
    required: false

  node-version-file:
    description: See "node-version-file" input documentation at https://github.com/actions/setup-node#readme
    required: false

  packages-token:
    description: Used as the NODE_AUTH_TOKEN environment variable when installing dependencies
    required: false

  token:
    description: See "token" input documentation at https://github.com/actions/setup-node#readme
    required: false

runs:
  steps:
    - uses: actions/checkout@v3

    - name: Use Node.js ${{ inputs.node-version }}
      # See https://github.com/actions/setup-node
      uses: actions/setup-node@v3.3.0
      with:
        always-auth: ${{ inputs.always-auth }}
        architecture: ${{ inputs.architecture }}
        cache: ${{ inputs.cache }}
        cache-dependency-path: ${{ inputs.cache-dependency-path }}
        check-latest: ${{ inputs.check-latest}}
        node-version: ${{ inputs.node-version }}
        node-version-file: ${{ inputs.node-version-file }}
        registry-url: ${{ inputs.registry-url }}
        scope: ${{ inputs.scope }}
        token: ${{ inputs.token }}

    - name: Install dependencies
      env:
        NODE_AUTH_TOKEN: ${{ inputs.packages-token }}
      run: npm ci --omit=optional
      shell: bash

    - name: Check formatting
      run: npm run format:check --if-present
      shell: bash

    - name: Lint
      run: npm run lint --if-present
      shell: bash

    - name: Run unit tests
      run: npm test --if-present -- --coverage
      shell: bash

    - name: Check types
      run: npm run types --if-present
      shell: bash

    - name: Build
      run: npm run build --if-present
      shell: bash

    - name: Package
      run: npm pack
      shell: bash

  using: composite
